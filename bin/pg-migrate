#!/usr/bin/env node
var fs = require('fs')
, async = require('async')
, pgm = require('..')
, colors = require('colors')
, path  = require('path')
, Client = require('pg').Client
, parseUrl = require('url').parse
, fomat = require('util').format

var argv = require('optimist')
.usage('Run PostgreSQL migration scripts.\nUsage: $0 -u postgres://postgres@localhost/mydb')
.describe('u', 'database url').demand('u').alias('u', 'url')
.describe('f', 'from index').alias('f', 'from')
.describe('t', 'to index').alias('t', 'to').default('t', 1000)
.describe('d', 'directory').alias('d', 'input').default('d', process.cwd())
.argv

var url = parseUrl(argv.u)
, statePath = path.join(argv.d, 'migrations.json')
, state = fs.existsSync(statePath) ? require(path.resolve(statePath)) : {}
, databaseId = url.host + url.pathname
, databaseState = state[databaseId] || (state[databaseId] = { current: 0 })
, from = argv.f || databaseState.current + 1

var client = new Client(argv.u)
client.connect()

var dir = path.resolve(argv.d)
, files = pgm.find(dir, from, argv.t)

if (from === 0 && argv.t == 1000) console.log('running all %s migrations', files.length)
else console.log('running %s migrations (%s to %s)', files.length, from, argv.t)

async.eachSeries(files, function(f, next) {
    process.stdout.write(f.filename + '...')
    var q = fs.readFileSync(path.join(dir, f.filename), 'utf8')
    client.query(q, function(err) {
        if (err) return next(err)
        databaseState.current = f.number
        console.log('OK'.green)
        next()
    })
}, function(err) {
    if (err) console.error('ERROR: %s\n'.red, err.message)
    fs.writeFileSync(path.resolve(statePath), JSON.stringify(state, null, 4))
    process.exit(err ? 1 : 0)
})
